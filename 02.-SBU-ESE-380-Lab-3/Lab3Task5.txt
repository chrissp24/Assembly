; sws_tbl.asm: Simple program to display the number of switches
;        in the on position. The number of switches in the on
;        position will be displayed on a 7-segment LED display.
;        If there is one switch in the position the 7-segment
;        will display a 1 and so on and so forth.
;
; inputs: DIP-8 switch, PD0 to PD7
; outputs: 7-segment display, 8 LEDs, PB0 to PB7, active low
;
; assumes: nothing
; alters: r16, r17, r18, r30, r31,  SREG
; 
; Author: KLS/FST
; Updated: Paultre/Saeid 9/24/14
; Lab Number: 3
; Lab Section: 4
; Lab Station: 5
; Version: 1.1

; Load include files(s)
.nolist
.include "m16Adef.inc"          ;include part specific header
.list

reset:
    ;Configure port B as an output port
    ldi r16, $FF                ;load r16 with all 1s
    out DDRB, r16               ;port B - all bits configured as outputs
    ;Configure port D as an input port
    ldi r16, $00                ;load r16 with all 0s
    out DDRD, r16               ;port D - all bits configured as inputs
    ldi r16, $FF                ;enable pull-up resistors by outputting
    out PORTD, r16              ;all 1s to PORTD
    
main_loop:
    in r16, PIND                ;input switch values
    ;Code to count switches in '1's position and output to bargraph
    ldi r17, 8                  ;loop parameter for inner loop
    ldi r18, $00                ;inital 1's counter value
    
next_bit:
    lsl r16                     ;shift msb of r16 into carry
    brcc dec_bitcounter         ;branch is carry clear, or
    inc r18                     ;increment r18 if a 1 was found in the carry
    
dec_bitcounter:
    dec r17                 
    brne next_bit               ;branch back if result after decrement is not 0
    
    ;Code to perform table loop, 1s count in r18 is offset
    ;into table 7-segment bit patterns
bcd_7seg:
    ldi ZH, high (table * 2)    ;set Z to point to start of table
    ldi ZL, low (table * 2)     ;
    ldi r16, $00                ;clear for later use
    add ZL, r18                 ;add low byte
    adc ZH, r16                 ;add in the carry
    lpm r18, Z                  ;load bit pattern from table into r18
display:
    out PORTB, r18              ;output pattern for 7-seg display count
    rjmp main_loop              ;jump back to read the switches again
    
    ;table of 7-segment bit patterns to display digits 0-8
table: .db $40,$79,$24,$30,$19,$12,$03,$78,$00
           ; 0   1   2   3   4   5   6   7   8  ?9? ?A? . . .   